{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "idgmcadf001dev"
		},
		"idgmcgdi001dev_properties_typeProperties_clusterUri": {
			"type": "string",
			"defaultValue": "https://idgmcgdi001dev.azurehdinsight.cn"
		},
		"idgmcgdi001dev_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"idgmchdfs001_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://idgmchdfs001.dfs.core.chinacloudapi.cn"
		},
		"idgmckeystore_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://idgmckeystore.vault.azure.cn/"
		},
		"idgmcstr001dev_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "idgmcstr001dev"
		},
		"remote_storage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "mcvmreinf"
		},
		"workspace1_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://adb-4624031639111869.1.databricks.azure.cn"
		},
		"workspace1_properties_typeProperties_newClusterNodeType": {
			"type": "string",
			"defaultValue": "Standard_DS3_v2"
		},
		"msiidentiy_properties_typeProperties_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/0f2daa80-6b16-44ee-8016-4ad888e059ac/resourceGroups/hditest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/idgmcmsi001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/sparkjob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sparkquery",
						"type": "HDInsightSpark",
						"dependsOn": [
							{
								"activity": "preparehivequery",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"rootPath": "scripts/HDInsightSpark",
							"entryFilePath": "sample.py",
							"sparkJobLinkedService": {
								"referenceName": "idgmcstr001dev",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "idgmcgdi001dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "preparehivequery",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "alltables_hql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "alltables_hql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "hivejobs",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "sparkquery",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/HDInsightHive/alltables.hql",
							"scriptLinkedService": {
								"referenceName": "idgmcstr001dev",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "idgmcgdi001dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sparkquery_copy_parallel",
						"type": "HDInsightSpark",
						"dependsOn": [
							{
								"activity": "preparehivequery",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"rootPath": "scripts/HDInsightSpark",
							"entryFilePath": "spark_copy_hvac.py",
							"sparkJobLinkedService": {
								"referenceName": "idgmcstr001dev",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "idgmcgdi001dev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmcstr001dev')]",
				"[concat(variables('factoryId'), '/linkedServices/idgmcgdi001dev')]",
				"[concat(variables('factoryId'), '/datasets/alltables_hql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "preparehivequery",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "alltables_hql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "targetstr",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "databricktasks",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "preparehivequery",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/my/pi.py",
							"parameters": []
						},
						"linkedServiceName": {
							"referenceName": "workspace1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"name": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/alltables_hql')]",
				"[concat(variables('factoryId'), '/datasets/targetstr')]",
				"[concat(variables('factoryId'), '/linkedServices/workspace1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsgen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "idgmchdfs001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HVAC.csv",
						"folderPath": "HdiSamples/HdiSamples/SensorSampleData/hvac",
						"fileSystem": "idgmcgdi001dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmchdfs001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/alltables_hql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "idgmcstr001dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "*",
						"container": "scripts"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmcstr001dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/targetstr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "idgmcstr001dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "scripts"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmcstr001dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/idgmcgdi001dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "[parameters('idgmcgdi001dev_properties_typeProperties_clusterUri')]",
					"userName": "[parameters('idgmcgdi001dev_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "idgmckeystore",
							"type": "LinkedServiceReference"
						},
						"secretName": "idgmcgdi001devadmin"
					},
					"isEspEnabled": false,
					"fileSystem": "idgmcgdi001dev",
					"linkedServiceName": {
						"referenceName": "idgmchdfs001",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmchdfs001')]",
				"[concat(variables('factoryId'), '/linkedServices/idgmckeystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/idgmchdfs001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('idgmchdfs001_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "idgmckeystore",
							"type": "LinkedServiceReference"
						},
						"secretName": "idgmchdfs001"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmckeystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/idgmckeystore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('idgmckeystore_properties_typeProperties_baseUrl')]",
					"credential": {
						"referenceName": "msiidentiy",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/msiidentiy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/idgmcstr001dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "idgmckeystore",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('idgmcstr001dev_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmckeystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/remote_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "idgmckeystore",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('remote_storage_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmckeystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/workspace1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "[parameters('workspace1_properties_typeProperties_domain')]",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "idgmckeystore",
							"type": "LinkedServiceReference"
						},
						"secretName": "Databricks001"
					},
					"newClusterNodeType": "[parameters('workspace1_properties_typeProperties_newClusterNodeType')]",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "10.0.x-scala2.12",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/idgmckeystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/job_schedule_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "test",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-01-19T01:36:00Z",
						"timeZone": "UTC",
						"schedule": {
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msiidentiy')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "[parameters('msiidentiy_properties_typeProperties_resourceId')]"
				}
			},
			"dependsOn": []
		}
	]
}